@startuml
abstract class Renderer{
    + virtual void render_circle(float x,float y,float radius)
}
class Shape{
    # Renderer& render;
    # Shape(Renderer&renderer)
    + {abstract} void draw()
    + {abstract} void resize(float factor)
}
class VectorRenderer{
    + void render_circle(float x,float y,float radius) override
}
class RasterRenderer{
    + void render_circle(float x,float y,float radius) override
}
class Circle{
    + float x
    + float y
    + float radiusE
    + void draw() override
    + void resize(float factor) override
}

Renderer <|-- VectorRenderer 
Renderer <|-- RasterRenderer
Shape <|-- Circle

Shape::render--> Renderer:受保护的成员变量
note left of Renderer: bridge

@enduml